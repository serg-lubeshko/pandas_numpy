import numpy as np

import numpy as np

# ===============================Slice+Двумерный массив=======================================================
""" 
!!!Внимание при срезе, не образуется новый объект а ссылка на существующий
Для создания нового объекта применять метод copy()
 
"""

arr1 = np.array([1, 2, 3, 5, 6, 8, ])

arr_new_object = arr1[1:3].copy()
arr_new_object[0] = 5
print(arr1, )
print(arr_new_object)

""" 
!!! 1) Внимание при срезе, не образуется новый объект а ссылка на существующий
    Для создания нового объекта применять метод copy()
    При применении маски, копирование происходит автоматом
    2) Стандартное обращение к элементу можно заменить  [1][2] ==[1,2]
    


"""

arr_2 = np.array([[5, 4, 3], [10, 15, 20]])
print(arr_2.shape)  # Характеристика массива

print(arr_2[1][2], "#Стандартное обращение к элементу arr_2[1][2]")  # Стандартное обращение к элементу
print(arr_2[1, 2], "#Numpy's обращение")  # Стандартное обращение к элементу

# ===============================Элемент+Трехмерный массив=======================================================

arr_4 = np.array([
    [[5, 4, 3], [10, 15, 20]],
    [[5, 4, 3], [10, 15, 20]]
])
print(f'{arr_4.shape} >>> форм-фактор (2, 2, 3)')  # Характеристика массива

print(arr_4[1, 1, 2], 'Получить элемент из 3-х мерного массива')

print("Занулим 0-ю матрицу")
arr_4[0] = 0
print(arr_4)

print('===============================Булевое сравнение=======================================================')

m = np.array([5, 4, 3, 6, 8, 10, 15])
mask = m > 5

print(mask, 'mask')
print(m[mask], 'Срез по m[mask]')
print(m[m > 5], 'Можно так - одной строкой m[m>5]')

